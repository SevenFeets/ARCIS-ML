# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Large calibration files (exclude only very large ones)
**/tmp_tflite_int8_calibration_images.npy
**/calibration_image_sample_data_*.npy

# Exclude large training outputs but keep important models
**/runs/**/weights/
**/experiments/runs/**/weights/
**/checkpoints/

# Exclude large dataset files but keep configuration files
data/raw/**/*.jpg
data/raw/**/*.png
data/raw/**/*.jpeg
data/processed/**/images/**/*.jpg
data/processed/**/images/**/*.png
data/processed/**/images/**/*.jpeg
data/processed/**/labels/**/*.txt

# Keep important files
!data/processed/**/data.yaml
!data/processed/**/metadata.json
!models/pretrained/*.pt
!models/pretrained/*.onnx
!models/pretrained/*.tflite
!models/pretrained/*.yaml

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
arcis_venv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Machine Learning specific - exclude only very large files
# Allow model files but exclude large training artifacts
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.model
*.weights
*.ckpt

# Exclude large model files but allow smaller ones
# Uncomment these if you want to exclude ALL model files:
# *.pth
# *.pt
# *.onnx
# *.tflite
# *.pb

# Dataset files - exclude only very large files
# Allow small datasets but exclude large ones
*.npz
*.csv
*.json
*.xml
*.yaml
*.yml

# Exclude large image datasets but allow small test images
# Uncomment these if you want to exclude ALL images:
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.tiff
# *.tif
# *.webp

# Always exclude large video files
*.mp4
*.avi
*.mov
*.mkv
*.flv
*.wmv

# Audio files
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.m4a

# Model training outputs
runs/
logs/
tensorboard_logs/
wandb/
mlruns/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.old

# Docker
.dockerignore

# Jupyter
.ipynb_checkpoints/

# PyTorch
*.pth
*.pt

# TensorFlow
*.pb
*.pbtxt
*.meta
*.index
*.data-*

# ONNX
*.onnx

# TensorRT
*.engine
*.plan

# OpenVINO
*.xml
*.bin

# CoreML
*.mlmodel

# TFLite
*.tflite

# Calibration data
calibration_*
*_calibration.*

# Test outputs
test_outputs/
test_results/

# Large dataset directories (uncomment if needed)
# data/raw/
# data/external/

# Model checkpoints (uncomment if needed)
# models/checkpoints/

# Experiment outputs (uncomment if needed)
# experiments/outputs/